#pragma kernel Render
#pragma kernel Simulate
#pragma kernel ResetTexture
#pragma kernel ResetAgents
#pragma kernel MakeTrail

#include "../Common.cginc"

Texture2D<float> _ReadTex;
SamplerState sampler__ReadTex;

RWTexture2D<float4> _VizTex;
RWTexture2D<float> _WriteTex;
RWTexture2D<float> _StigmergyTex;

struct Agent
{
    float2 pos;
    float2 dir;
};

RWStructuredBuffer<Agent> _Agents;

int _Rez, _AgentCount, _Range;
float _Time, _DirThreshold, _TrailDeposit, _TrailDecay;

float2 GetRandomPos(float x)
{
    return Random(float2(_Time * 0.001, x * 0.1 / _Time)) * (_Rez - 1);
}

float2 GetRandomDir(float2 id)
{
    float2 rnd = Random(id.xx * 0.1 + sin(_Time));
    return normalize(2 * rnd - 1);    
}

[numthreads(32,32,1)]
void Render (uint3 id : SV_DispatchThreadID)
{
    float agentVal = _WriteTex[id.xy];
    float trailVal = _StigmergyTex[id.xy];
    _VizTex[id.xy] = float4(trailVal, trailVal, trailVal, 1);    
}

[numthreads(32,32,1)]
void MakeTrail (uint3 id : SV_DispatchThreadID)
{    
    _StigmergyTex[id.xy] = (_StigmergyTex[id.xy] + _WriteTex[id.xy] * _TrailDeposit) * _TrailDecay;    
}

[numthreads(64,1,1)]
void Simulate (uint3 id : SV_DispatchThreadID)
{    
    Agent a = _Agents[id.x];
    float2 topPos = float2(-1,0);
    float maxVal = 0;
    
    for (int x = -_Range; x <= _Range; x++)
    {
        for (int y = -_Range; y <= _Range; y++)
        {
            if (x == 0 && y == 0)
                continue;

            float currentVal = _ReadTex.SampleLevel(sampler__ReadTex, (round(a.pos) + int2(x, y)) / _Rez, 0);

            if (currentVal > maxVal)
            {
                float2 currentPos = a.pos + int2(x, y);
                float2 currentDir = normalize(currentPos - a.pos);
                if (dot(currentDir, a.dir) > _DirThreshold)
                {
                    maxVal = currentVal;
                    topPos = a.pos + int2(x, y); 
                }                
            }
        }
    }

    if (topPos.x > -1)
    {        
        a.dir = normalize(topPos - a.pos);
    }        
        
    a.pos += a.dir;
    
    if(a.pos.x < 0)
        a.pos.x += _Rez;
    if(a.pos.y < 0)
        a.pos.y += _Rez;
    
    a.pos %= _Rez;       
    int2 texCoord = round(a.pos) % _Rez;
    _WriteTex[texCoord] = 1;
    _Agents[id.x] = a;
}

[numthreads(32,32,1)]
void ResetTexture (uint3 id : SV_DispatchThreadID)
{    
    _WriteTex[id.xy] = 0;
}

[numthreads(64,1,1)]
void ResetAgents (uint3 id : SV_DispatchThreadID)
{
    Agent currentAgent;
    currentAgent.dir = GetRandomDir(id.x);
    currentAgent.pos = GetRandomPos(id.x);

    _Agents[id.x] = currentAgent;
}